version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.2.1

jobs:
  test:
    parallelism: 1
    docker:
      - image: cimg/go:1.18.1
    steps:
      - run:
          command: go install golang.org/x/lint/golint@latest
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: "Enforce Go Formatted Code"
          command: "! go fmt ./... 2>&1 | read"
      - run:
          name: "Go lint"
          command: golint ./...
      - run:
          name: "Go vet"
          command: go vet ./...
      - run:
          name: Run tests
          command: go test -v

workflows:
  version: 2
  test_build_deploy:
    jobs:
      ### DEV
      - test
      - aws-ecr/build-and-push-image:
          name: build-sam-dev-container
          context: lumen-sam-dev-context
          public-registry: false
          repo: sam-api
          filters:
            branches:
              only: develop
      - aws-ecs/deploy-service-update:
          name: deploy-dev-containers
          requires:
            - build-sam-dev-container
          context: lumen-sam-dev-context
          cluster-name: '${MY_APP_PREFIX}-cluster'
          container-image-name-updates: 'container=${MY_APP_PREFIX}-service,tag=${CIRCLE_SHA1}'
          family: '${MY_APP_PREFIX}-service'

      ### PROD
      - test
      - aws-ecr/build-and-push-image:
          name: build-sam-prod-container
          context: lumen-sam-prod-context
          public-registry: false
          repo: sam-api
          filters:
            branches:
              only: prodelop
      - aws-ecs/deploy-service-update:
          name: deploy-prod-containers
          requires:
            - build-sam-prod-container
          context: lumen-sam-prod-context
          cluster-name: '${MY_APP_PREFIX}-cluster'
          container-image-name-updates: 'container=${MY_APP_PREFIX}-service,tag=${CIRCLE_SHA1}'
          family: '${MY_APP_PREFIX}-service'